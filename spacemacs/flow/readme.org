* Flowjs / spacemacs integration
Experimental flowjs / spacemacs integration because I couldn't find one elsewhere. Thanks to these guys:

- https://github.com/flowtype/flow-for-emacs for almost all of the backend code (I had to slightly modify some of it).
- https://github.com/aaronjensen/company-flow for the integration with company allowing for semantic autocomplete as you type.
- https://github.com/bodil/emacs.d/blob/master/bodil/bodil-js.el#L129 for the flycheck integration making type linting on file save possible
- https://github.com/syl20bnr/spacemacs/issues/7119 for all the help in finding where to look
- and all the others I'm forgetting about

** Dependencies
*** Emacs packages
  - company-flow [0]
  - popup.el [1]

Popup.el should already be a dependency in spacemacs default config. For company-flow, manually add in dotspacemasc/layers, eg:

#+begin_src emacs-lisp
dotspacemacs-additional-packages '(company-flow)
#+end_src

[0] https://github.com/aaronjensen/company-flow

[1] https://github.com/auto-complete/popup-el

*** Spacemacs layers
  - auto-completion (for company)
  - syntax-checking (for flycheck)
  - react for react-mode
  - javascript for js2-mode

*** JS tooling, see example folder
  - local flow (partial global support)
  - local or global eslint with babel-eslint

**  Install
1. Load flow.el file and call ~(init-flowjs)~ from dotspacemacs/user-config, eg:

#+begin_src emacs-lisp
(load-file "~/config/spacemacs/flow.el")
(init-flowjs)
#+end_src

2. Reload spacemacs config by restarting it or pressing /<SPC> f e R/

3. start react-mode or js2-mode


** Flow-mode (minor mode)
This mode is defined in flow.el. Flow-mode is automatically activated on react/js2/rjsx-mode hooks if the buffer starts with ~\\ @flow~ (multi line comment syntax currently not supported)
   
** Flow semantic autocomplete
Autocomplete is ran through /company-flow [0]/. If you have the spacemacs /auto-completion layer [1]/ enabled, flow suggestions will show up in the /company [2]/ autocomplete popup.

[0] https://github.com/aaronjensen/company-flow

[1] http://spacemacs.org/layers/+completion/auto-completion/README.html

[2] http://company-mode.github.io/

** Flow type linting
Linting as you type is ran through /flycheck [0]/. Installing the spacemacs /syntax-checking layer [1]/ will install flycheck as a dependency. Flycheck shows flow error only if flow mode is activated

[0] http://www.flycheck.org/en/latest/

[1] http://spacemacs.org/layers/+checkers/syntax-checking/README.html

** Basic eldoc type at pos (experimental)
Very basic eldoc [0] showing type at position. Only works when flow-mode is activated. It asks for flow a type annotation of the element under the cursor, parses it and colors it, before messing it to the mini buffer.

I originally tried to do this using regexes but the results were unsatisfactory for my taste, regexes are hard ! The current type syntax coloring happens by lexing flow's response, building an AST from it, and then constructing a colored type annotation from that AST. It's my first time coding a recursive descent parser and my first time coding a non trivial algorithm in lisp so forgive me if some of the output is wrong. Please notify me and I'll look into it and provide a fix, I'll of course accept PR's :) Finally, the lexer and parser are both tested but the coloring algorithm isn't (as of right now)

[0] https://www.emacswiki.org/emacs/c-eldoc.el

** Key bindings
All keybindings are /preceeded/ by: *<SPC> m f*.

| key binding | action                                  |
|-------------+-----------------------------------------|
| t           | flow type in popup above cursor         |
| a           | auto complete suggestions in new window |
| d           | def location in new window              |
| f           | flow status in new window               |
| s           | flow suggestions in new window          |


**  Testing
Clone repo, cd into example folder and run npm install to get flow and eslint:

#+begin_src bash
git clone git@github.com:tbinetruy/config.git
cd config/spacemacs/flow/example
npm install      # install eslint and flowjs locally
emacs flow.js    # open flow.js with emacs
#+end_src


** Screenshots

| action                                | screenshot                                 |
|---------------------------------------+--------------------------------------------|
| User defined attribute autocomplete   | [[./screenshots/flow-autocomplete-attr.png]]   |
| Js std autocomplete                   | [[./screenshots/flow-autocomplete-js-std.png]] |
| Type linting                          | [[./screenshots/flow-lint-typing.png]]         |
| Type at position                      | [[./screenshots/flow-type-at-pos.png]]         |
| Type of std function                  | [[./screenshots/flow-type-at-pos-js-std.png]]  |
| Flow status on project (experimental) | [[./screenshots/flow-status-proto.png]]        |
| Colored eldoc                         | [[./screenshots/flow-eldoc-simple.png]]        |
| Colored eldoc for React variable      | [[./screenshots/flow-eldoc-complex.png]]       |




